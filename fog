#!/bin/bash

# Script fog - Processus caché dans le brouillard
# Hack#3 - Processus invisible et persistant

# Configuration
TRACE_FILE="$HOME/.cache/fog_trace"
DB_FILE="$HOME/.local/share/fog.db"
PROC_NAME="[kworker/0:0-events]"
DELAY=30

# Créer les répertoires nécessaires
mkdir -p "$(dirname "$TRACE_FILE")" "$(dirname "$DB_FILE")"

# Fonction pour écrire une trace
log_trace() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] Processus actif - PID: $$" >> "$TRACE_FILE"
    sqlite3 "$DB_FILE" "INSERT INTO logs (timestamp, pid, status) VALUES (datetime('now'), $$, 'active');"
}

# Initialiser la base de données SQLite
init_db() {
    sqlite3 "$DB_FILE" "CREATE TABLE IF NOT EXISTS logs (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        timestamp TEXT,
        pid INTEGER,
        status TEXT
    );"
}

# Fonction pour se cacher
hide_process() {
    # Changer le nom du processus
    exec -a "$PROC_NAME" bash -c "
        # Se détacher du terminal
        setsid -w bash -c '
            # Rediriger les entrées/sorties
            exec 0</dev/null
            exec 1>/dev/null
            exec 2>/dev/null
            
            # Changer le répertoire de travail
            cd /tmp
            
            # Boucle principale
            while true; do
                # Écrire une trace
                echo \"[\$(date '+%Y-%m-%d %H:%M:%S')] Processus actif - PID: \$\$\" >> \"$TRACE_FILE\"
                sqlite3 \"$DB_FILE\" \"INSERT INTO logs (timestamp, pid, status) VALUES (datetime('now'), \$\$, 'active');\"
                
                # Nettoyer les traces dans /proc
                if [ -d \"/proc/\$\$\" ]; then
                    # Masquer l'information du processus
                    echo -n \"$PROC_NAME\" > /proc/\$\$/comm 2>/dev/null || true
                fi
                
                sleep $DELAY
            done
        ' &
    "
}

# Fonction principale
main() {
    init_db
    
    # Vérifier si déjà en cours d'exécution
    if pgrep -f "$PROC_NAME" > /dev/null; then
        echo "Processus déjà en cours d'exécution"
        exit 1
    fi
    
    # Se cacher et démarrer
    hide_process
    
    # Quitter le processus parent
    exit 0
}

# Lancer le processus
main "$@"